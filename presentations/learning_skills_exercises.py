# מחברת Jupyter לתרגול מיומנויות למידה בתכנות
# ------------------------------------------
# בכל תא מופיעה מיומנות, תרגיל קוד, ותא רפלקציה שהתלמיד צריך למלא.

# 🧠 חשיבה יצירתית
print("אתגר: צרו משחק 'נחש את המילה' עם חוק ייחודי שאתם ממציאים (לא חוקים רגילים). לדוגמה: צבעים, מספרים, ASCII.")
# כתבו כאן את הקוד שלכם:


# ✍️ רפלקציה
# מה למדתי על היכולת שלי לחשוב בצורה יצירתית?


# 🧠 חשיבה ביקורתית
unsorted_list = [5, 3, 8, 6, 7, 2]
print("קוד קיים - מיון איטי:")
for i in range(len(unsorted_list)):
    for j in range(len(unsorted_list)-1):
        if unsorted_list[j] > unsorted_list[j+1]:
            unsorted_list[j], unsorted_list[j+1] = unsorted_list[j+1], unsorted_list[j]
print(unsorted_list)

print("שפרו את הקוד – בחרו מיון יעיל יותר (למשל quicksort / mergesort)")
# כתבו כאן גרסה יעילה יותר:

# ✍️ רפלקציה
# מה גיליתי כשניסיתי לנתח קוד קיים בצורה ביקורתית?


# 🧠 פתרון בעיות
print("שרת socket שנתקע אחרי כמה חיבורים – דוגמת קוד עם בעיה:")

import socket

server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
server_socket.bind(("localhost", 12345))
server_socket.listen(1)

print("השרת מוכן – אבל הוא מקבל רק חיבור אחד בכל פעם ונתקע אם מגיעים כמה לקוחות במקביל.")

while True:
    client_socket, addr = server_socket.accept()
    print("חיבור מ:", addr)
    data = client_socket.recv(1024).decode()
    print("נתונים:", data)
    client_socket.send("נעניתי".encode())
    client_socket.close()

# המשימה: לחשוב איך לפתור – למשל שימוש ב-threads או ב-async כדי לא להיתקע על חיבור אחד.

# ✍️ רפלקציה
# איך ניגשתי לבעיה כשלא הייתה לי תשובה מוכנה?


# 🙇 מודעות עצמית
print("סיימתם פרויקט Flask קטן. מלאו יומן למידה אישי:")
# ✍️ רפלקציה
# איפה הצלחתי? איפה נתקעתי? מה למדתי על עצמי?


# 🙇 ניהול זמן
print("פרויקט בשלבים: שלב 1 – UI, שלב 2 – לוגיקה, שלב 3 – בדיקות.")
print("צרו תרשים זמנים (אפשר אפילו עם print של טבלה פשוטה) והתקדמו לפי לוחות זמנים.")

# תרגיל ניהול זמן:
import time

milestones = [
    ("שלב 1 – UI", 2),
    ("שלב 2 – לוגיקה", 3),
    ("שלב 3 – בדיקות", 1)
]

print("לכל שלב יש זמן מוקצב (בדקות, כאן נשתמש בשניות להדגמה):")
for stage, minutes in milestones:
    print(f"מתחילים {stage}, זמן מוקצב: {minutes} שניות")
    time.sleep(minutes)
    print(f"סיום {stage}\n")

print("תרגיל: נסו להריץ, לראות איך השלבים מתקדמים לפי זמן, ולתכנן מה הייתם עושים בכל שלב כדי לעמוד בזמנים.")

# ✍️ רפלקציה
# האם עמדתי בזמנים? מה גרם לי להתעכב?


# 🙇 הכוונה עצמית
print("משימה פתוחה: כתבו תוכנה שמקבלת טקסט ומחזירה ניתוח סטטיסטי (מס' מילים, תווים, תדירות אותיות).")
# כתבו כאן את הקוד שלכם:


# ✍️ רפלקציה
# איך חקרתי ובחרתי את הדרך לבצע את המשימה?


# 🙇 התמדה
print("קוד עם באג חמקמק: מצאו ותקנו!")
nums = [1, 2, 3, 4]
# סכימה אמורה להיות 10, אך יש באג:
sum_nums = 0
for i in range(len(nums)-1):  # באג כאן – עובר רק עד האיבר השלישי
    sum_nums += nums[i]
print("התוצאה הלא נכונה:", sum_nums)

# ✍️ פתרון באג + רפלקציה
# איך הרגשתי כשלא הצלחתי מיד? איך התמדתי עד לפתרון?


# 🤝 מודעות חברתית
print("תרגיל מודעות חברתית: דמו מצב שבו כל תלמיד אחראי על חלק אחר במערכת (API, DB, Frontend).\n")
print("בתרגיל זה אחד החלקים יתעכב – נסו לדמות איך זה משפיע על שאר החלקים.")

# דוגמת סימולציה פשוטה:
tasks = {"API": False, "DB": True, "Frontend": True}

for task, done in tasks.items():
    if not done:
        print(f"❌ המשימה {task} לא הושלמה – שאר הצוות לא יכול להתקדם.")
    else:
        print(f"✅ המשימה {task} הושלמה.")

print("חשבו: איך הייתם מגיבים כחברי צוות? איך אפשר לעזור לאחרים כדי שכולם יצליחו?")

# ✍️ רפלקציה
# מה למדתי על האחריות שלי מול הצוות?


# 🤝 התנהלות חברתית
print("סיטואציה: חבר בצוות כתב קוד שעובד אך אינו יעיל במיוחד.
")
print("בקשו מהתלמידים לבצע Code Review ולתת משוב חיובי שמתחיל בחיזוק (מה כן עבד טוב), ולאחר מכן הצעה לשיפור בצורה בונה.")

# ✍️ רפלקציה
# איך נתתי ביקורת בצורה מכבדת? האם התחלתי במשוב חיובי?
# איך נתתי ביקורת בצורה מכבדת?


# 🤝 שיתוף פעולה
print("Hackathon כיתתי – כל תלמיד כותב חלק. כאן אפשר להכניס את החלק שלי.")
# כתבו את התרומה האישית שלכם:


# ✍️ רפלקציה
# איך עבדתי בצוות? מה היה קל/קשה?


# 🤝 ניהול דיון
print("Brainstorming – רשמו שלושה רעיונות לפרויקט, ובחרו אחד כקבוצה.")
# ✍️ רעיונות:
# 1.
# 2.
# 3.
# החלטה: ...
